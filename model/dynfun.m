    function [f, dfdx, dfdxdot, dfdu, L, dL_dq] = dynfun(x, xdot, u)%dLdx (x2 to 6 which are the angles) dLdq 1 by 5 matrix
    % The 13 dynamics equations of the system, in the form
    %   f(x, dx/dt, u) = 0
    % where x contains the 13 state variables and u are the 5 joint torques
	% This function also outputs the wrist-sprocket distance L and related Jacobian
    
    global model 
    
	% copy parameter values into variables with shorter names
    c =  model.parameters.C;
	m =  model.parameters.m ;
    K =  model.parameters.K;      % shock cord stiffness
    L0 = model.parameters.L0;     % the wrist-sprocket distance when shock cord has zero force
	
	% Kcrm is probably no longer needed (remove it when confirmed)
    Kcrm = model.parameters.Kcrm; % chain rachet mechanism stiffness
    Bcrm = model.parameters.Bcrm; % chain rachet mechanism damping

    % initialize the matrices
    f = zeros(13,1);    
    dfdx = spalloc(13,13,75);
    dfdxdot = spalloc(13,13,32);
    dfdu = spalloc(13,5,5);
    
    % x = [x_fw, q1 ...q5, v_fw, qd1...qd5, F]
    % velocities are derivative of positions
    f(1:6) = xdot(1:6) - x(7:12); 
    dfdx(1:6, 7:12)   = -speye(6);
    dfdxdot(1:6, 1:6) = speye(6);
    
    % human dynamics
    q = x(2:6);     % the five coordinates of the human model
    qd = x(8:12);
    qdd = xdot(8:12);   
    
    % rowerdynamics function generated by Autolev computes 5 torques
    % using inverse dynamics and also the wrist-sprocket length L
    [z, dz_dq, dz_dqd, dz_dqdd, dz_dFc, L, dL_dq, dLdot_dq] = rowerdynamics(q,qd,qdd,x(13),model.parameters);% inverse dynamics so gives us the z(torques) 
    Ldot = dL_dq * qd;

    % multibody dynamics
    f(8:12) = z - u;
    dfdx(8:12, 2:6)  = dz_dq;
    dfdx(8:12, 8:12) = dz_dqd;
    dfdx(8:12, 13)   = dz_dFc;
    dfdxdot(8:12, 8:12) = dz_dqdd;
    dfdu(8:12, :) = -speye(5);
    
    % dynamics of the flywheel
    % m*a - Fdamping - Fcrm = 0
    % or m*a - Fdamping - (Ftotal - Fshockcord) = 0
    f(7) = m * xdot(7) + c*x(7)*abs(x(7)) - (x(13) - K*(L-L0)); % x(7):velocity of the flyhweel ==> xdot(7): acceleration of the flywheel, m*xdot(7)--> intertia, c*x(7)^2--> damping, x(13): amount of flywheel motion
    dfdx(7,7) = 2*c*abs(x(7));
    dfdx(7,13) = -1;
    dfdxdot(7,7) = m;
    dfdx(7, 2:6) = K*dL_dq;

    % ratchet mechanism force is a function of the wrist-sprocket distance
    % L and flywheel position x(1)
    
    % start with a linear function
    F = Kcrm * (L - x(1)) + Bcrm * (Ldot - x(7));
    
    % a nonlinear transformation to change negative forces to zero
    epsilon = 0.000001;
    Fcrm = (F + sqrt(F^2 + epsilon^2) )/2;
    dFcrm_dF = (1 + F/sqrt(F^2 + epsilon^2))/2; 

    % this says that the force on the wrist is the sum of flywheel force
    % and shock cord
    f(13) = x(13) - Fcrm - K*(L - L0);
    dfdx(13,13) = 1;
    dfdx(13,1) = Kcrm * dFcrm_dF;
    dfdx(13,7) = Bcrm * dFcrm_dF;
    dfdx(13,2:6) = -(dFcrm_dF * Kcrm + K) * dL_dq - dFcrm_dF * Bcrm * dLdot_dq;
	dfdx(13,8:12) = -dFcrm_dF * Bcrm * dL_dq;		% because dLdot/dqdot = dL/dq
    
end